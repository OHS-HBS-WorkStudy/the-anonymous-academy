/* Container for the new thread page */
.NewThread {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: fit-content;
    padding: 0px;
    box-sizing: border-box;
    scrollbar-width: thin;
    scrollbar-color: #6C58CE transparent;
    background-color: var(--color-background);
    transition: height 0.3s ease;
    overflow-x: auto;
  }

  .rule-checkbox {
    padding-top: 15px;
  }

  .threadRules {
    background-color: var(--clr-primary-a0); 
    border: 1px solid var(--color-primary-accent); 
    border-radius: 8px;
    padding: 20px;
    margin-bottom: 20px;
  }
  
  .threadRules h2 {
    font-size: 1.2em;
    margin-bottom: 10px;
    color: var(--color-text-black); 
  }
  
  .threadRules p {
    font-size: 0.9em;
    color: var(--color-text-black); 
    margin-bottom: 10px;
  }
  
  .threadRules ul {
    list-style-type: disc;
    margin-left: 20px;
    margin-bottom: 10px;
  }
  
  .threadRules li {
    font-size: 0.9em;
    color: var(--color-black-gold-light);
    line-height: 1.6;
  }

  .NewThread::-webkit-scrollbar {
    width: 8px;
  }
  
  .NewThread::-webkit-scrollbar-thumb {
    background-color: #6C58CE;
    border-radius: 4px;
  }
  
  .NewThread::-webkit-scrollbar-track {
    background-color: transparent;
  }
  
  /* Centered content within the new thread container */
  .NewThread .center {
    width: 100%;
    max-width: 100vw;
    height: fit-content;
    display: flex;
    flex-direction: column;
    border-radius: 0;
    padding: 24px;
    gap: 20px;
    background-color: var(--clr-surface-a10);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }
  
  /* Focus state for the center container */
  .NewThread .center:focus-within {
    border-color: var(--clr-primary-a0);
  }
  
  /* Fade-in animation */
  @keyframes fadeInUp {
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  
  /* Full width utility class */
  .fill {
    min-width: 100%;
  }
  
  /* Input container styles */
.input-container {
    width: 100%;
    max-width: 100%;
    background-color: var(--clr-surface-a0);
    color: #e7e7e7FF;
    display: flex;
    flex-direction: column;
    padding: 16px;
    box-sizing: border-box;
    border: none;
    border-radius: 8px;
    overflow: visible;
  }
  
  .input-container::placeholder {
    color: white;
  }
  
  .input-container.text-box.ql-container {
    background-color: transparent !important;
  }
  
  /* Tag input container styles */
  .tag-input-container {
    display: flex;
    align-items: left;
    justify-content: center;
    flex-direction: column;
    width: 100%;
    padding: 16px;
    background-color: transparent !important;
    color: #e7e7e7FF;
    font-size: 1rem;
    box-sizing: border-box;
    opacity: 1;
 
    border-radius: 8px;
    transition: border-color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    overflow: visible;
  }

  input #tag-input.tag-input-container {
    background-color: white !important;
    z-index: 1000;
    opacity: 1;
    border: 1px solid yellow;
  }
  
  /* Tag input focus state */
  .tag-input-container:focus {
    border-color: #f0a500;
    box-shadow: 0 0 5px rgba(240, 165, 0, 0.5);
  }
  
  /* Tags container styles */
  .tags-container {
    display: flex;
    flex-wrap: wrap;
    align-items: left;
    border-radius: 12px;
    padding: 12px 16px;
    gap: 8px;
    min-width: 100%;
    min-height: 40px;
    box-sizing: border-box;
    transition: box-shadow 0.3s ease;
  }
  
  /* Individual tag styles */
  .tag {
    background-color: #e0e0e0;
    padding: 8px 14px;
    border-radius: 20px;
    cursor: pointer;
    font-size: 0.9rem;
    color: #333;
    font-weight: 500;
    transition: background-color 0.8s ease, transform 0.6s ease;
  }
  
  /* Tag hover and active states */
  .tag:hover {
    background-color: #f0a500;
    transform: scale(1.05);
  }
  
  .tag:active {
    background-color: #ff4c4c;
    transform: scale(0.98);
  }
  
  /* Tag removal animation */
  .tag.removing {
    animation: shrinkTag 0.3s forwards;
    transition: opacity 0.3s ease-out, color 0.3s ease-out;
  }
  
  @keyframes shrinkTag {
    from {
      transform: scale(1);
      opacity: 1;
      color: #333; /* Ensure text starts visible */
    }
    to {
      transform: scale(0);
      opacity: 0;
      color: rgba(51, 51, 51, 0); /* Explicitly fade out text */
    }
  }
  
  /* Label styles */
  label h1 {
    display: flex;
    align-items: left;
    justify-content: left;
    width: 100%;
    max-width: 100%;
    margin-top:  0;
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 12px;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    text-align: left !important;
    color: var(--clr-primary-a30);
  }
  
  /* Input container heading styles */
  .NewThread .input-container h2 {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 10px;
    color: #333;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    text-align: left;
  }
  
  /* Input container paragraph styles */
  .NewThread .input-container p {
    font-size: 0.875rem;
    color: white !important;
    margin-top: 8px;
    font-family: 'Arial', sans-serif;
    line-height: 1.5;
  }
  
  /* Input container hover state */
  .NewThread .input-container:hover {
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.12);
  }
  
  /* Input and tag input styles */
  .NewThread #questionTitle,
  .NewThread #tag-input {
    width: 100%;
    max-width: 100%;
    padding: 12px 14px;
    border: none;
    font-size: 1rem;
    color: white;
    background-color: var(--clr-surface-a50) !important;
    outline: none;
    transition: box-shadow 0.2s ease, border-bottom 0.4s ease-in-out;
  }
  
  /* Text box styles */
  .NewThread .text-box {
    width: 100%;
    max-width: 100%;
    border: 2px solid #e0e0e062;
    padding: 16px;
    transition: border-color 0.3s ease-in-out;
    background-color: var(--clr-surface-a0);
  }
  
  .text {
    font-size: 16px;
  }
  
  /* Text box focus state */
  .NewThread .text-box:focus-within {
    border-color: var(--clr-primary-a0);
  }
  
  /* Quill editor toolbar styles */
  .ql-toolbar.ql-snow .ql-stroke,
  .ql-toolbar.ql-snow .ql-fill.ql-stroke {
    fill: none;
    stroke: var(--clr-primary-a50);
  }
  
  .ql-toolbar.ql-snow .ql-fill {
    fill: var(--clr-primary-a50);
    stroke: none;
  }
  
  .ql-toolbar.ql-snow .ql-picker {
    color: var(--clr-primary-a50);
  }
  
  .NewThread .ql-toolbar.ql-snow {
    background-color: var(--clr-primary-a10) !important;
    border: 0 !important;
    border-radius: 5px !important;
    margin-bottom: 10px !important;
  }
  
  .NewThread .ql-toolbar.ql-snow .ql-formats {
    display: inline-flex !important;
    flex-wrap: nowrap !important;
  }
  
  .NewThread .ql-toolbar.ql-snow::placeholder {
    color: white !important;
  }
  
  .NewThread .ql-container.ql-snow {
    border: 0 !important;
    border-radius: 8px !important;
    color: var(--color-text-tertiary) !important;
    background-color: var(--clr-surface-a50) !important;
  }
  
  .NewThread .ql-container.ql-snow .ql-editor {
    color: var(--color-text-tertiary) !important;
  }
  
  /* Quill editor text box styles */
  .NewThread .text-box .ql-editor {
    width: 100%;
    min-height: 170px;
    font-size: 1rem;
    color: white;
    padding: 8px;
    box-sizing: border-box;
    resize: vertical;
    border: 1.1px dashed #e0e0e062 !important;
    border-radius: 8px !important;
  }
  
  /* Character counter styles */
  .NewThread .charCounter {
    color: var(--clr-surface-tonal-a50);
    padding-top: 5px;
  }
  
  /* Load button styles */
  
  .loadButton.container {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 60px;
    width: 100%;
  }
  
  .loadButton button {
    background-color: var(--newThread-button);
    color: white;
    width: auto;
    height: 48px;
    font-size: 1rem;
    font-weight: 600;
    padding: 12px 16px;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.3s ease;
    margin-bottom: 0;
    box-sizing: border-box; 
  }
  
  
  /* Load button hover state */
  .loadButton button:hover {
    background-color: var(--newThread-button-hover);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }
  
  /* Load button loading state */
  .loadButton.loading button {
    background-color: #e0e0e0;
    cursor: not-allowed;
    opacity: 0.7;
  }
  
  
  /* Responsive styles for screens smaller than 640px */
  @media (max-width: 640px) {
    .NewThread .center {
      height: fit-content !important;
    }
    .NewThread .text-box .ql-editor {
      min-height: calc(100vh - 500px);
    }
  }